:: users - holds the users
    _id
    username: S,U
    password: S
    email: S,U
    full_name: S
    is_disabled: B      // maybe, later
    is_admin: B         // maybe, later 

// User.Activity --> this point to the activities collection, the Activity model
// User.findByCredentials( {username, password} ) => User/null if password matches for the user
// User.generateAuthToken() => token for this user
// User.toJSON() => json object of User, with password and _v set to undefined


:: rivals - links two users in a rivalry // stretch goal
    _id
    user1Id - _id.User
    user2Id - _id.User


:: routes - the preset routes for exercise (run, cycle)
    _id
    activity_type: enum (cycle,run,etc)
    distance
    time
    difficulty


// teh activities that are available
const activityTypes = ['run','cycle','swim'];


:: activities - will hold the recorded activities (runs, cycling, etc)
    _id
    userId  - _id.User
    routeId - _id.Route
    activity_type: enum(cycle,run,etc) // same thing in the Route
    time_taken
    distance_done
    calories_burned





